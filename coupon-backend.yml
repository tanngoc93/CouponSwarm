version: "3.8"

networks:
  private_network:
    driver: overlay
    attachable: true

  public_network:
    driver: overlay
    external: true

  db_network:
    driver: overlay
    external: true

services:
  backend:
    image: tanngoc93/com.thedogpaws.coupon:latest
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      DB_PORT: "${RAILS_DB_PORT}"
      DB_HOST: "${RAILS_DB_HOST}"
      DB_USER: "${RAILS_DB_USER}"
      DB_PASSWORD: "${RAILS_DB_PASSWORD}"
      DB_FOR_PROD: "${RAILS_DB_PROD}"
      REDIS_HOST: "${REDIS_HOST}"
      RAILS_ENV: "${RAILS_ENV}"
      RACK_ENV: "${RACK_ENV}"
      PLATFORM: "${RAILS_PLATFORM}"
      PORT: "${PORT}"
    networks:
      - private_network
      - public_network
      - db_network
    depends_on:
      - redis
      - sidekiq
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=public_network"
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        #
        - "traefik.http.routers.backend-http.rule=Host(`coupon.${DOMAIN}`)"
        - "traefik.http.routers.backend-http.entrypoints=web"
        - "traefik.http.routers.backend-http.middlewares=redirect-to-https"
        # 
        - "traefik.http.services.backend-svc.loadbalancer.server.port=80"
        # 
        - "traefik.http.routers.backend-https.rule=Host(`coupon.${DOMAIN}`)"
        - "traefik.http.routers.backend-https.entrypoints=websecured"
        - "traefik.http.routers.backend-https.tls=true"
        - "traefik.http.routers.backend-https.tls.certresolver=mytlschallenge"
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
